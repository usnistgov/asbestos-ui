{"remainingRequest":"/home/bill/develop/view/node_modules/babel-loader/lib/index.js!/home/bill/develop/view/node_modules/eslint-loader/index.js??ref--13-0!/home/bill/develop/view/src/store/base.js","dependencies":[{"path":"/home/bill/develop/view/src/store/base.js","mtime":1553081102748},{"path":"/home/bill/develop/view/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/bill/develop/view/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/bill/develop/view/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.find-index\";\nimport Vue from 'vue';\nimport Vuex from 'vuex';\nVue.use(Vuex); // TODO: When assigning id - check it doesnt already exist\n\nexport var baseStore = {\n  state: function state() {\n    return {\n      tests: [],\n      testIds: []\n    };\n  },\n  mutations: {\n    clearTests: function clearTests(state) {\n      state.testIds.length = 0;\n      state.tests.length = 0;\n    },\n    installTestIds: function installTestIds(state, testIds) {\n      for (var i in testIds) {\n        state.testIds.push(testIds[i]);\n      }\n    },\n    installTest: function installTest(state, test) {\n      state.tests.push(test);\n    },\n    installTestVariable: function installTestVariable(state, variableDesc) {\n      // variableDesc is { testId: id, part: variable }\n      var testId = variableDesc.testId;\n      var variable = variableDesc.part;\n      var testIndex = state.tests.findIndex(function (test) {\n        return test.id === testId;\n      });\n\n      if (testIndex === -1) {\n        throw \"Cannot find test id \".concat(testId, \" in installTestVariable\");\n      }\n\n      state.tests[testIndex].variables.push(variable);\n    },\n    updateTestVariable: function updateTestVariable(state, variable) {\n      var testId = variable.testId;\n      var variableId = variable.id;\n      var testIndex = state.tests.findIndex(function (test) {\n        return test.id === testId;\n      });\n\n      if (testIndex === -1) {\n        throw \"Cannot find test id \".concat(testId, \" in updateTestVariable\");\n      }\n\n      var variableIndex = state.tests[testIndex].variables.findIndex(function (vari) {\n        return vari.id === variableId;\n      });\n\n      if (variableIndex === -1) {\n        throw \"Cannot find variable id \".concat(variableId, \" in test \").concat(testId, \" in updateTestVariable\");\n      }\n\n      state.tests[testIndex].variables[variableIndex] = variable;\n    },\n    installTestFixture: function installTestFixture(state, testDesc) {\n      // testDesc is { testId: id, part: variable }\n      var testIndex = state.tests.findIndex(function (test) {\n        return test.id === testDesc.testId;\n      });\n\n      if (testIndex === -1) {\n        throw \"Cannot find test id \".concat(testDesc.id, \" in installTestVariable\");\n      }\n\n      state.tests[testIndex].fixtures.push(testDesc.part);\n    },\n    installTestSetup: function installTestSetup(state, testDesc) {\n      // testDesc is { testId: id, part: variable }\n      var testIndex = state.tests.findIndex(function (test) {\n        return test.id === testDesc.testId;\n      });\n\n      if (testIndex === -1) {\n        throw \"Cannot find test id \".concat(testDesc.id, \" in installTestVariable\");\n      }\n\n      state.tests[testIndex].setups.push(testDesc.part);\n    },\n    installTestTest: function installTestTest(state, testDesc) {\n      // testDesc is { testId: id, part: variable }\n      var testIndex = state.tests.findIndex(function (test) {\n        return test.id === testDesc.testId;\n      });\n\n      if (testIndex === -1) {\n        throw \"Cannot find test id \".concat(testDesc.id, \" in installTestVariable\");\n      }\n\n      state.tests[testIndex].tests.push(testDesc.part);\n    },\n    installTestTeardown: function installTestTeardown(state, testDesc) {\n      // testDesc is { testId: id, part: variable }\n      var testIndex = state.tests.findIndex(function (test) {\n        return test.id === testDesc.testId;\n      });\n\n      if (testIndex === -1) {\n        throw \"Cannot find test id \".concat(testDesc.id, \" in installTestVariable\");\n      }\n\n      state.tests[testIndex].teardowns.push(testDesc.part);\n    }\n  },\n  getters: {}\n};",{"version":3,"sources":["/home/bill/develop/view/src/store/base.js"],"names":["Vue","Vuex","use","baseStore","state","tests","testIds","mutations","clearTests","length","installTestIds","i","push","installTest","test","installTestVariable","variableDesc","testId","variable","part","testIndex","findIndex","id","variables","updateTestVariable","variableId","variableIndex","vari","installTestFixture","testDesc","fixtures","installTestSetup","setups","installTestTest","installTestTeardown","teardowns","getters"],"mappings":"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","sourcesContent":["import Vue from 'vue'\nimport Vuex from 'vuex'\n\nVue.use(Vuex)\n\n// TODO: When assigning id - check it doesnt already exist\nexport const baseStore = {\n    state() {\n        return {\n            tests: [],\n            testIds: []\n        }\n    },\n    mutations: {\n        clearTests(state) {\n            state.testIds.length = 0\n            state.tests.length = 0\n        },\n        installTestIds(state, testIds) {\n            for (let i in testIds) {\n                state.testIds.push(testIds[i])\n            }\n        },\n        installTest(state, test) {\n            state.tests.push(test)\n        },\n        installTestVariable(state, variableDesc) {\n            // variableDesc is { testId: id, part: variable }\n            const testId = variableDesc.testId\n            const variable = variableDesc.part\n            const testIndex = state.tests.findIndex(function (test) {\n                return test.id === testId\n            })\n            if (testIndex === -1) { throw `Cannot find test id ${testId} in installTestVariable` }\n            state.tests[testIndex].variables.push(variable)\n        },\n        updateTestVariable(state, variable) {\n            const testId = variable.testId\n            const variableId = variable.id\n\n            const testIndex = state.tests.findIndex(function (test) {\n                return test.id === testId\n            })\n            if (testIndex === -1) { throw `Cannot find test id ${testId} in updateTestVariable` }\n\n            const variableIndex = state.tests[testIndex].variables.findIndex( function (vari) {\n                return vari.id === variableId\n            })\n            if (variableIndex === -1) { throw `Cannot find variable id ${variableId} in test ${testId} in updateTestVariable` }\n            state.tests[testIndex].variables[variableIndex] = variable\n        },\n        installTestFixture(state, testDesc) {\n            // testDesc is { testId: id, part: variable }\n            const testIndex = state.tests.findIndex(function (test) {\n                return test.id === testDesc.testId\n            })\n            if (testIndex === -1) { throw `Cannot find test id ${testDesc.id} in installTestVariable` }\n            state.tests[testIndex].fixtures.push(testDesc.part)\n        },\n        installTestSetup(state, testDesc) {\n            // testDesc is { testId: id, part: variable }\n            const testIndex = state.tests.findIndex(function (test) {\n                return test.id === testDesc.testId\n            })\n            if (testIndex === -1) { throw `Cannot find test id ${testDesc.id} in installTestVariable` }\n            state.tests[testIndex].setups.push(testDesc.part)\n        },\n        installTestTest(state, testDesc) {\n            // testDesc is { testId: id, part: variable }\n            const testIndex = state.tests.findIndex(function (test) {\n                return test.id === testDesc.testId\n            })\n            if (testIndex === -1) { throw `Cannot find test id ${testDesc.id} in installTestVariable` }\n            state.tests[testIndex].tests.push(testDesc.part)\n        },\n        installTestTeardown(state, testDesc) {\n            // testDesc is { testId: id, part: variable }\n            const testIndex = state.tests.findIndex(function (test) {\n                return test.id === testDesc.testId\n            })\n            if (testIndex === -1) { throw `Cannot find test id ${testDesc.id} in installTestVariable` }\n            state.tests[testIndex].teardowns.push(testDesc.part)\n        }\n    },\n    getters: {\n\n    }\n}\n"]}]}