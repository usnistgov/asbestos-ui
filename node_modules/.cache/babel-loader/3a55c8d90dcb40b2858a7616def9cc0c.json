{"remainingRequest":"/home/bill/develop/view/node_modules/babel-loader/lib/index.js!/home/bill/develop/view/node_modules/eslint-loader/index.js??ref--13-0!/home/bill/develop/view/src/store/testEditor.js","dependencies":[{"path":"/home/bill/develop/view/src/store/testEditor.js","mtime":1552647738176},{"path":"/home/bill/develop/view/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/bill/develop/view/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/bill/develop/view/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.find-index\";\nimport \"core-js/modules/es6.function.name\";\nimport Vue from 'vue';\nimport Vuex from 'vuex';\nimport { newTest } from \"../types/test\";\nVue.use(Vuex);\nvar idCounter = 1; // TODO: When assigning id - check it doesnt already exist\n\nexport var testEditorStore = {\n  state: function state() {\n    return newTest();\n  },\n  mutations: {\n    addTestVariable: function addTestVariable(state, variable) {\n      if (!variable.name) {\n        var id = idCounter++;\n        var name = '#variable' + id;\n        variable.id = id;\n        variable.name = name;\n      }\n\n      state.variables.push(variable);\n    },\n    delTestVariable: function delTestVariable(state, id) {\n      state.variables = state.variables.filter(function (variable) {\n        return variable.id !== id;\n      });\n    }\n  },\n  getters: {\n    variableIndexById: function variableIndexById(state) {\n      return function (id) {\n        return state.variables.findIndex(function (variable) {\n          return variable.id === id;\n        });\n      };\n    }\n  }\n};",{"version":3,"sources":["/home/bill/develop/view/src/store/testEditor.js"],"names":["Vue","Vuex","newTest","use","idCounter","testEditorStore","state","mutations","addTestVariable","variable","name","id","variables","push","delTestVariable","filter","getters","variableIndexById","findIndex"],"mappings":";;AAAA,OAAOA,GAAP,MAAgB,KAAhB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,SAAQC,OAAR,QAAsB,eAAtB;AAGAF,GAAG,CAACG,GAAJ,CAAQF,IAAR;AAEA,IAAIG,SAAS,GAAG,CAAhB,C,CACA;;AAEA,OAAO,IAAMC,eAAe,GACxB;AACIC,EAAAA,KADJ,mBACY;AACJ,WAAOJ,OAAO,EAAd;AACH,GAHL;AAIIK,EAAAA,SAAS,EAAE;AACPC,IAAAA,eADO,2BACSF,KADT,EACgBG,QADhB,EAC0B;AAE7B,UAAI,CAACA,QAAQ,CAACC,IAAd,EAAoB;AAChB,YAAIC,EAAE,GAAGP,SAAS,EAAlB;AACA,YAAIM,IAAI,GAAG,cAAcC,EAAzB;AACAF,QAAAA,QAAQ,CAACE,EAAT,GAAcA,EAAd;AACAF,QAAAA,QAAQ,CAACC,IAAT,GAAgBA,IAAhB;AACH;;AAEDJ,MAAAA,KAAK,CAACM,SAAN,CAAgBC,IAAhB,CAAqBJ,QAArB;AACH,KAXM;AAYPK,IAAAA,eAZO,2BAYSR,KAZT,EAYgBK,EAZhB,EAYoB;AACvBL,MAAAA,KAAK,CAACM,SAAN,GAAkBN,KAAK,CAACM,SAAN,CAAgBG,MAAhB,CAAwB,UAAUN,QAAV,EAAoB;AAC1D,eAAOA,QAAQ,CAACE,EAAT,KAAgBA,EAAvB;AACH,OAFiB,CAAlB;AAGH;AAhBM,GAJf;AAuBIK,EAAAA,OAAO,EAAE;AACLC,IAAAA,iBAAiB,EAAE,2BAACX,KAAD;AAAA,aAAY,UAACK,EAAD,EAAQ;AACnC,eAAOL,KAAK,CAACM,SAAN,CAAgBM,SAAhB,CAA0B,UAAUT,QAAV,EAAoB;AACjD,iBAAOA,QAAQ,CAACE,EAAT,KAAgBA,EAAvB;AACH,SAFM,CAAP;AAGH,OAJkB;AAAA;AADd;AAvBb,CADG","sourcesContent":["import Vue from 'vue'\nimport Vuex from 'vuex'\nimport {newTest} from \"../types/test\"\n\n\nVue.use(Vuex)\n\nlet idCounter = 1\n// TODO: When assigning id - check it doesnt already exist\n\nexport const testEditorStore =\n    {\n        state() {\n            return newTest()\n        },\n        mutations: {\n            addTestVariable(state, variable) {\n\n                if (!variable.name) {\n                    let id = idCounter++\n                    let name = '#variable' + id\n                    variable.id = id\n                    variable.name = name\n                }\n\n                state.variables.push(variable)\n            },\n            delTestVariable(state, id) {\n                state.variables = state.variables.filter( function (variable) {\n                    return variable.id !== id\n                })\n            }\n        },\n\n        getters: {\n            variableIndexById: (state) =>  (id) => {\n                return state.variables.findIndex(function (variable) {\n                    return variable.id === id\n                })\n            }\n        }\n    }\n\n\n\n\n"]}]}