{"remainingRequest":"/home/bill/develop/view/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/bill/develop/view/src/components/TestPanel.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/bill/develop/view/src/components/TestPanel.vue","mtime":1553174847599},{"path":"/home/bill/develop/view/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/bill/develop/view/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/bill/develop/view/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/bill/develop/view/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\nimport VariableEdit from \"./VariableEdit\";\n\nexport default {\n  data () {\n    return {\n\n    }\n  },\n  components: { VariableEdit },\n  computed: {\n    variableSelectionValid() {\n      const variableId = this.$route.params.variableId\n      const testId = this.$route.params.testId\n\n      const testIndex = this.$store.state.base.tests.findIndex(function (test) {\n        return test.id === testId\n      })\n      if (testIndex === -1) { return false }\n\n      const variableIndex = this.$store.state.base.tests[testIndex].variables.findIndex( function (vari) {\n        return vari.id === variableId\n      })\n      if (variableIndex === -1) { return false }\n      return true\n    }\n  },\n  methods: {\n    thisVariable() {\n      const variableId = this.$route.params.variableId\n      const testId = this.$route.params.testId\n\n      const testIndex = this.$store.state.base.tests.findIndex(function (test) {\n        return test.id === testId\n      })\n      if (testIndex === -1) { throw `Cannot find test id ${testId} in TestPanel` }\n\n      const variableIndex = this.$store.state.base.tests[testIndex].variables.findIndex( function (vari) {\n        return vari.id === variableId\n      })\n      if (variableIndex === -1) { throw `Cannot find variable id ${variableId} in test ${testId} in TestPanel` }\n\n      return this.$store.state.base.tests[testIndex].variables[variableIndex]\n    }\n  }\n}\n",{"version":3,"sources":["TestPanel.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;AAeA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"TestPanel.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div>\n    <!--route has simple ids-->\n    <div v-if=\"variableSelectionValid\">\n      <div v-if=\"$route.params.variableId\">\n        <variable-edit :variable=\"thisVariable()\"></variable-edit>\n      </div>\n      <div v-else>\n        Test {{ $route.params.testId }}\n      </div>\n    </div>\n  </div>\n</template>\n<script>\n\n  import VariableEdit from \"./VariableEdit\";\n\n  export default {\n    data () {\n      return {\n\n      }\n    },\n    components: { VariableEdit },\n    computed: {\n      variableSelectionValid() {\n        const variableId = this.$route.params.variableId\n        const testId = this.$route.params.testId\n\n        const testIndex = this.$store.state.base.tests.findIndex(function (test) {\n          return test.id === testId\n        })\n        if (testIndex === -1) { return false }\n\n        const variableIndex = this.$store.state.base.tests[testIndex].variables.findIndex( function (vari) {\n          return vari.id === variableId\n        })\n        if (variableIndex === -1) { return false }\n        return true\n      }\n    },\n    methods: {\n      thisVariable() {\n        const variableId = this.$route.params.variableId\n        const testId = this.$route.params.testId\n\n        const testIndex = this.$store.state.base.tests.findIndex(function (test) {\n          return test.id === testId\n        })\n        if (testIndex === -1) { throw `Cannot find test id ${testId} in TestPanel` }\n\n        const variableIndex = this.$store.state.base.tests[testIndex].variables.findIndex( function (vari) {\n          return vari.id === variableId\n        })\n        if (variableIndex === -1) { throw `Cannot find variable id ${variableId} in test ${testId} in TestPanel` }\n\n        return this.$store.state.base.tests[testIndex].variables[variableIndex]\n      }\n    }\n  }\n</script>\n<style scoped>\n  .main {\n    display: grid;\n    grid-template-columns: 20% 80%;\n    grid-template-areas: 'nav body';\n  }\n  .nav {\n    text-align: left;\n    align-content: start;\n    grid-area: nav;\n  }\n  .body {\n    text-align: left;\n    align-content: start;\n    grid-area: body;\n  }\n\n</style>\n"]}]}